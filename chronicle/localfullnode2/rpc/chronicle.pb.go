// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chronicle.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("chronicle.proto", fileDescriptor_de8af7475620c367) }

var fileDescriptor_de8af7475620c367 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0x49, 0x05, 0x85, 0x20, 0xb4, 0x8c, 0xe0, 0x21, 0x5e, 0xbc, 0x08, 0xf5, 0x92, 0x96,
	0x55, 0xe9, 0x41, 0x51, 0xda, 0x2a, 0xf5, 0x22, 0x94, 0xee, 0x13, 0x6c, 0xe3, 0x74, 0xbb, 0x90,
	0x4d, 0xc2, 0x24, 0x15, 0xf2, 0x74, 0x3e, 0x83, 0x6f, 0x24, 0xdd, 0x6d, 0x29, 0x28, 0x05, 0xdd,
	0x1e, 0x33, 0x33, 0xff, 0xf7, 0xc3, 0x47, 0x78, 0x5b, 0x2d, 0xc9, 0x9a, 0x42, 0x69, 0x94, 0x8e,
	0x6c, 0xb0, 0x70, 0x44, 0x4e, 0x89, 0x53, 0x65, 0xcb, 0xd2, 0x9a, 0x7a, 0x24, 0x2e, 0x72, 0x6b,
	0x73, 0x8d, 0xbd, 0xea, 0x35, 0x5f, 0x2d, 0x7a, 0x58, 0xba, 0x10, 0xeb, 0x65, 0xf2, 0xd9, 0xe2,
	0x62, 0xbc, 0x65, 0x3c, 0xaf, 0x4a, 0x87, 0x34, 0x43, 0x1f, 0x2c, 0x21, 0xcd, 0xa6, 0x63, 0x78,
	0xe0, 0x9d, 0x09, 0x86, 0x37, 0xf4, 0x3e, 0xcb, 0xf1, 0x35, 0xf3, 0x4b, 0xf4, 0x70, 0x2e, 0x6b,
	0xa0, 0xdc, 0x02, 0xe5, 0xcb, 0x1a, 0x28, 0x3a, 0x92, 0x9c, 0x92, 0x69, 0xa0, 0xc2, 0xe4, 0x43,
	0xa2, 0x2c, 0xc2, 0x13, 0x3f, 0x9b, 0x60, 0x48, 0xa3, 0x6f, 0x0a, 0x18, 0x70, 0xd8, 0xd5, 0xa7,
	0x81, 0x30, 0x2b, 0x47, 0x11, 0x7e, 0xdd, 0x89, 0x76, 0x35, 0x19, 0xc5, 0xb0, 0x39, 0x82, 0x84,
	0x9f, 0x4c, 0x91, 0x7c, 0xe1, 0x03, 0xfc, 0xdc, 0x89, 0x3d, 0xf5, 0x70, 0xc7, 0xf9, 0x26, 0x93,
	0x46, 0xff, 0xe7, 0x58, 0xf2, 0xd5, 0xe2, 0x97, 0x7b, 0x0c, 0xd6, 0xc9, 0xb5, 0xc7, 0xc7, 0x43,
	0x3c, 0xf6, 0x19, 0x0c, 0x0f, 0x34, 0xd9, 0x67, 0x70, 0xdf, 0xd0, 0x65, 0x97, 0xf5, 0x19, 0xdc,
	0xfe, 0xdf, 0x67, 0x97, 0xc1, 0xa0, 0x91, 0xd1, 0x2e, 0x1b, 0x5d, 0xf3, 0x2b, 0x6b, 0x50, 0x16,
	0xe6, 0x03, 0xa5, 0xb6, 0x2a, 0xd3, 0x8b, 0x95, 0xd6, 0xc6, 0xbe, 0x63, 0x22, 0x77, 0x1f, 0x9e,
	0x9c, 0x9a, 0xb2, 0xf9, 0x71, 0x15, 0xbe, 0xf9, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x02, 0x3a, 0x7a,
	0xaf, 0x0a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChronicleDumperRestorerRPCClient is the client API for ChronicleDumperRestorerRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChronicleDumperRestorerRPCClient interface {
	GetMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StringArray, error)
	GetSysMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StringArray, error)
	GetMessageStreamBy(ctx context.Context, in *StringArray, opts ...grpc.CallOption) (*ByteStream, error)
	Persist(ctx context.Context, in *ByteStream, opts ...grpc.CallOption) (*empty.Empty, error)
	PersistSys(ctx context.Context, in *ByteStream, opts ...grpc.CallOption) (*empty.Empty, error)
}

type chronicleDumperRestorerRPCClient struct {
	cc *grpc.ClientConn
}

func NewChronicleDumperRestorerRPCClient(cc *grpc.ClientConn) ChronicleDumperRestorerRPCClient {
	return &chronicleDumperRestorerRPCClient{cc}
}

func (c *chronicleDumperRestorerRPCClient) GetMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StringArray, error) {
	out := new(StringArray)
	err := c.cc.Invoke(ctx, "/rpc.ChronicleDumperRestorerRPC/GetMessageHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronicleDumperRestorerRPCClient) GetSysMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StringArray, error) {
	out := new(StringArray)
	err := c.cc.Invoke(ctx, "/rpc.ChronicleDumperRestorerRPC/GetSysMessageHashes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronicleDumperRestorerRPCClient) GetMessageStreamBy(ctx context.Context, in *StringArray, opts ...grpc.CallOption) (*ByteStream, error) {
	out := new(ByteStream)
	err := c.cc.Invoke(ctx, "/rpc.ChronicleDumperRestorerRPC/GetMessageStreamBy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronicleDumperRestorerRPCClient) Persist(ctx context.Context, in *ByteStream, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.ChronicleDumperRestorerRPC/Persist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chronicleDumperRestorerRPCClient) PersistSys(ctx context.Context, in *ByteStream, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.ChronicleDumperRestorerRPC/PersistSys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChronicleDumperRestorerRPCServer is the server API for ChronicleDumperRestorerRPC service.
type ChronicleDumperRestorerRPCServer interface {
	GetMessageHashes(context.Context, *empty.Empty) (*StringArray, error)
	GetSysMessageHashes(context.Context, *empty.Empty) (*StringArray, error)
	GetMessageStreamBy(context.Context, *StringArray) (*ByteStream, error)
	Persist(context.Context, *ByteStream) (*empty.Empty, error)
	PersistSys(context.Context, *ByteStream) (*empty.Empty, error)
}

// UnimplementedChronicleDumperRestorerRPCServer can be embedded to have forward compatible implementations.
type UnimplementedChronicleDumperRestorerRPCServer struct {
}

func (*UnimplementedChronicleDumperRestorerRPCServer) GetMessageHashes(ctx context.Context, req *empty.Empty) (*StringArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageHashes not implemented")
}
func (*UnimplementedChronicleDumperRestorerRPCServer) GetSysMessageHashes(ctx context.Context, req *empty.Empty) (*StringArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSysMessageHashes not implemented")
}
func (*UnimplementedChronicleDumperRestorerRPCServer) GetMessageStreamBy(ctx context.Context, req *StringArray) (*ByteStream, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageStreamBy not implemented")
}
func (*UnimplementedChronicleDumperRestorerRPCServer) Persist(ctx context.Context, req *ByteStream) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Persist not implemented")
}
func (*UnimplementedChronicleDumperRestorerRPCServer) PersistSys(ctx context.Context, req *ByteStream) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PersistSys not implemented")
}

func RegisterChronicleDumperRestorerRPCServer(s *grpc.Server, srv ChronicleDumperRestorerRPCServer) {
	s.RegisterService(&_ChronicleDumperRestorerRPC_serviceDesc, srv)
}

func _ChronicleDumperRestorerRPC_GetMessageHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronicleDumperRestorerRPCServer).GetMessageHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ChronicleDumperRestorerRPC/GetMessageHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronicleDumperRestorerRPCServer).GetMessageHashes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronicleDumperRestorerRPC_GetSysMessageHashes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronicleDumperRestorerRPCServer).GetSysMessageHashes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ChronicleDumperRestorerRPC/GetSysMessageHashes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronicleDumperRestorerRPCServer).GetSysMessageHashes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronicleDumperRestorerRPC_GetMessageStreamBy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StringArray)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronicleDumperRestorerRPCServer).GetMessageStreamBy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ChronicleDumperRestorerRPC/GetMessageStreamBy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronicleDumperRestorerRPCServer).GetMessageStreamBy(ctx, req.(*StringArray))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronicleDumperRestorerRPC_Persist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByteStream)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronicleDumperRestorerRPCServer).Persist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ChronicleDumperRestorerRPC/Persist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronicleDumperRestorerRPCServer).Persist(ctx, req.(*ByteStream))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChronicleDumperRestorerRPC_PersistSys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ByteStream)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChronicleDumperRestorerRPCServer).PersistSys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.ChronicleDumperRestorerRPC/PersistSys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChronicleDumperRestorerRPCServer).PersistSys(ctx, req.(*ByteStream))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChronicleDumperRestorerRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ChronicleDumperRestorerRPC",
	HandlerType: (*ChronicleDumperRestorerRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMessageHashes",
			Handler:    _ChronicleDumperRestorerRPC_GetMessageHashes_Handler,
		},
		{
			MethodName: "GetSysMessageHashes",
			Handler:    _ChronicleDumperRestorerRPC_GetSysMessageHashes_Handler,
		},
		{
			MethodName: "GetMessageStreamBy",
			Handler:    _ChronicleDumperRestorerRPC_GetMessageStreamBy_Handler,
		},
		{
			MethodName: "Persist",
			Handler:    _ChronicleDumperRestorerRPC_Persist_Handler,
		},
		{
			MethodName: "PersistSys",
			Handler:    _ChronicleDumperRestorerRPC_PersistSys_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chronicle.proto",
}

// ChronicleDumperRestorerStreamRPCClient is the client API for ChronicleDumperRestorerStreamRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChronicleDumperRestorerStreamRPCClient interface {
	GetMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetMessageHashesClient, error)
	GetSysMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetSysMessageHashesClient, error)
	GetMessageStreamBy(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetMessageStreamByClient, error)
	Persist(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_PersistClient, error)
	PersistSys(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_PersistSysClient, error)
}

type chronicleDumperRestorerStreamRPCClient struct {
	cc *grpc.ClientConn
}

func NewChronicleDumperRestorerStreamRPCClient(cc *grpc.ClientConn) ChronicleDumperRestorerStreamRPCClient {
	return &chronicleDumperRestorerStreamRPCClient{cc}
}

func (c *chronicleDumperRestorerStreamRPCClient) GetMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetMessageHashesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChronicleDumperRestorerStreamRPC_serviceDesc.Streams[0], "/rpc.ChronicleDumperRestorerStreamRPC/GetMessageHashes", opts...)
	if err != nil {
		return nil, err
	}
	x := &chronicleDumperRestorerStreamRPCGetMessageHashesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChronicleDumperRestorerStreamRPC_GetMessageHashesClient interface {
	Recv() (*StringArray, error)
	grpc.ClientStream
}

type chronicleDumperRestorerStreamRPCGetMessageHashesClient struct {
	grpc.ClientStream
}

func (x *chronicleDumperRestorerStreamRPCGetMessageHashesClient) Recv() (*StringArray, error) {
	m := new(StringArray)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chronicleDumperRestorerStreamRPCClient) GetSysMessageHashes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetSysMessageHashesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChronicleDumperRestorerStreamRPC_serviceDesc.Streams[1], "/rpc.ChronicleDumperRestorerStreamRPC/GetSysMessageHashes", opts...)
	if err != nil {
		return nil, err
	}
	x := &chronicleDumperRestorerStreamRPCGetSysMessageHashesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChronicleDumperRestorerStreamRPC_GetSysMessageHashesClient interface {
	Recv() (*StringArray, error)
	grpc.ClientStream
}

type chronicleDumperRestorerStreamRPCGetSysMessageHashesClient struct {
	grpc.ClientStream
}

func (x *chronicleDumperRestorerStreamRPCGetSysMessageHashesClient) Recv() (*StringArray, error) {
	m := new(StringArray)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chronicleDumperRestorerStreamRPCClient) GetMessageStreamBy(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_GetMessageStreamByClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChronicleDumperRestorerStreamRPC_serviceDesc.Streams[2], "/rpc.ChronicleDumperRestorerStreamRPC/GetMessageStreamBy", opts...)
	if err != nil {
		return nil, err
	}
	x := &chronicleDumperRestorerStreamRPCGetMessageStreamByClient{stream}
	return x, nil
}

type ChronicleDumperRestorerStreamRPC_GetMessageStreamByClient interface {
	Send(*StringArray) error
	Recv() (*ByteStream, error)
	grpc.ClientStream
}

type chronicleDumperRestorerStreamRPCGetMessageStreamByClient struct {
	grpc.ClientStream
}

func (x *chronicleDumperRestorerStreamRPCGetMessageStreamByClient) Send(m *StringArray) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCGetMessageStreamByClient) Recv() (*ByteStream, error) {
	m := new(ByteStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chronicleDumperRestorerStreamRPCClient) Persist(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_PersistClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChronicleDumperRestorerStreamRPC_serviceDesc.Streams[3], "/rpc.ChronicleDumperRestorerStreamRPC/Persist", opts...)
	if err != nil {
		return nil, err
	}
	x := &chronicleDumperRestorerStreamRPCPersistClient{stream}
	return x, nil
}

type ChronicleDumperRestorerStreamRPC_PersistClient interface {
	Send(*ByteStream) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type chronicleDumperRestorerStreamRPCPersistClient struct {
	grpc.ClientStream
}

func (x *chronicleDumperRestorerStreamRPCPersistClient) Send(m *ByteStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCPersistClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chronicleDumperRestorerStreamRPCClient) PersistSys(ctx context.Context, opts ...grpc.CallOption) (ChronicleDumperRestorerStreamRPC_PersistSysClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChronicleDumperRestorerStreamRPC_serviceDesc.Streams[4], "/rpc.ChronicleDumperRestorerStreamRPC/PersistSys", opts...)
	if err != nil {
		return nil, err
	}
	x := &chronicleDumperRestorerStreamRPCPersistSysClient{stream}
	return x, nil
}

type ChronicleDumperRestorerStreamRPC_PersistSysClient interface {
	Send(*ByteStream) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type chronicleDumperRestorerStreamRPCPersistSysClient struct {
	grpc.ClientStream
}

func (x *chronicleDumperRestorerStreamRPCPersistSysClient) Send(m *ByteStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCPersistSysClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChronicleDumperRestorerStreamRPCServer is the server API for ChronicleDumperRestorerStreamRPC service.
type ChronicleDumperRestorerStreamRPCServer interface {
	GetMessageHashes(*empty.Empty, ChronicleDumperRestorerStreamRPC_GetMessageHashesServer) error
	GetSysMessageHashes(*empty.Empty, ChronicleDumperRestorerStreamRPC_GetSysMessageHashesServer) error
	GetMessageStreamBy(ChronicleDumperRestorerStreamRPC_GetMessageStreamByServer) error
	Persist(ChronicleDumperRestorerStreamRPC_PersistServer) error
	PersistSys(ChronicleDumperRestorerStreamRPC_PersistSysServer) error
}

// UnimplementedChronicleDumperRestorerStreamRPCServer can be embedded to have forward compatible implementations.
type UnimplementedChronicleDumperRestorerStreamRPCServer struct {
}

func (*UnimplementedChronicleDumperRestorerStreamRPCServer) GetMessageHashes(req *empty.Empty, srv ChronicleDumperRestorerStreamRPC_GetMessageHashesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMessageHashes not implemented")
}
func (*UnimplementedChronicleDumperRestorerStreamRPCServer) GetSysMessageHashes(req *empty.Empty, srv ChronicleDumperRestorerStreamRPC_GetSysMessageHashesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetSysMessageHashes not implemented")
}
func (*UnimplementedChronicleDumperRestorerStreamRPCServer) GetMessageStreamBy(srv ChronicleDumperRestorerStreamRPC_GetMessageStreamByServer) error {
	return status.Errorf(codes.Unimplemented, "method GetMessageStreamBy not implemented")
}
func (*UnimplementedChronicleDumperRestorerStreamRPCServer) Persist(srv ChronicleDumperRestorerStreamRPC_PersistServer) error {
	return status.Errorf(codes.Unimplemented, "method Persist not implemented")
}
func (*UnimplementedChronicleDumperRestorerStreamRPCServer) PersistSys(srv ChronicleDumperRestorerStreamRPC_PersistSysServer) error {
	return status.Errorf(codes.Unimplemented, "method PersistSys not implemented")
}

func RegisterChronicleDumperRestorerStreamRPCServer(s *grpc.Server, srv ChronicleDumperRestorerStreamRPCServer) {
	s.RegisterService(&_ChronicleDumperRestorerStreamRPC_serviceDesc, srv)
}

func _ChronicleDumperRestorerStreamRPC_GetMessageHashes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChronicleDumperRestorerStreamRPCServer).GetMessageHashes(m, &chronicleDumperRestorerStreamRPCGetMessageHashesServer{stream})
}

type ChronicleDumperRestorerStreamRPC_GetMessageHashesServer interface {
	Send(*StringArray) error
	grpc.ServerStream
}

type chronicleDumperRestorerStreamRPCGetMessageHashesServer struct {
	grpc.ServerStream
}

func (x *chronicleDumperRestorerStreamRPCGetMessageHashesServer) Send(m *StringArray) error {
	return x.ServerStream.SendMsg(m)
}

func _ChronicleDumperRestorerStreamRPC_GetSysMessageHashes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChronicleDumperRestorerStreamRPCServer).GetSysMessageHashes(m, &chronicleDumperRestorerStreamRPCGetSysMessageHashesServer{stream})
}

type ChronicleDumperRestorerStreamRPC_GetSysMessageHashesServer interface {
	Send(*StringArray) error
	grpc.ServerStream
}

type chronicleDumperRestorerStreamRPCGetSysMessageHashesServer struct {
	grpc.ServerStream
}

func (x *chronicleDumperRestorerStreamRPCGetSysMessageHashesServer) Send(m *StringArray) error {
	return x.ServerStream.SendMsg(m)
}

func _ChronicleDumperRestorerStreamRPC_GetMessageStreamBy_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChronicleDumperRestorerStreamRPCServer).GetMessageStreamBy(&chronicleDumperRestorerStreamRPCGetMessageStreamByServer{stream})
}

type ChronicleDumperRestorerStreamRPC_GetMessageStreamByServer interface {
	Send(*ByteStream) error
	Recv() (*StringArray, error)
	grpc.ServerStream
}

type chronicleDumperRestorerStreamRPCGetMessageStreamByServer struct {
	grpc.ServerStream
}

func (x *chronicleDumperRestorerStreamRPCGetMessageStreamByServer) Send(m *ByteStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCGetMessageStreamByServer) Recv() (*StringArray, error) {
	m := new(StringArray)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChronicleDumperRestorerStreamRPC_Persist_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChronicleDumperRestorerStreamRPCServer).Persist(&chronicleDumperRestorerStreamRPCPersistServer{stream})
}

type ChronicleDumperRestorerStreamRPC_PersistServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*ByteStream, error)
	grpc.ServerStream
}

type chronicleDumperRestorerStreamRPCPersistServer struct {
	grpc.ServerStream
}

func (x *chronicleDumperRestorerStreamRPCPersistServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCPersistServer) Recv() (*ByteStream, error) {
	m := new(ByteStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChronicleDumperRestorerStreamRPC_PersistSys_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChronicleDumperRestorerStreamRPCServer).PersistSys(&chronicleDumperRestorerStreamRPCPersistSysServer{stream})
}

type ChronicleDumperRestorerStreamRPC_PersistSysServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*ByteStream, error)
	grpc.ServerStream
}

type chronicleDumperRestorerStreamRPCPersistSysServer struct {
	grpc.ServerStream
}

func (x *chronicleDumperRestorerStreamRPCPersistSysServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chronicleDumperRestorerStreamRPCPersistSysServer) Recv() (*ByteStream, error) {
	m := new(ByteStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ChronicleDumperRestorerStreamRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.ChronicleDumperRestorerStreamRPC",
	HandlerType: (*ChronicleDumperRestorerStreamRPCServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetMessageHashes",
			Handler:       _ChronicleDumperRestorerStreamRPC_GetMessageHashes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetSysMessageHashes",
			Handler:       _ChronicleDumperRestorerStreamRPC_GetSysMessageHashes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetMessageStreamBy",
			Handler:       _ChronicleDumperRestorerStreamRPC_GetMessageStreamBy_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Persist",
			Handler:       _ChronicleDumperRestorerStreamRPC_Persist_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "PersistSys",
			Handler:       _ChronicleDumperRestorerStreamRPC_PersistSys_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "chronicle.proto",
}
